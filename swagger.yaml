openapi: 3.0.0
info:
  title: API para a Gestão do Progresso e Feedback do jogo FoxShapes Academy
  description: API para gerenciar feedbacks, progressos e configurações de usuários em uma aplicação do jogo. Além de conter as conquistas do jogo.
  version: 1.0.0
paths:
  /users:
    get:
      summary: Obtém todos os usuários.
      responses:
        '200':
          description: Retorna uma lista de usuários.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Cria um novo usuário.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuário criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Atualiza um usuário existente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuário atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Exclui um usuário.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuário excluído com sucesso.
        '404':
          description: Usuário não encontrado.

  /feedbacks:
    get:
      summary: Obtém todos os feedbacks.
      responses:
        '200':
          description: Retorna uma lista de feedbacks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feedback'
    post:
      summary: Cria um novo feedback.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '201':
          description: Feedback criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
    put:
      summary: Atualiza um feedback existente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '200':
          description: Feedback atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
    delete:
      summary: Exclui um feedback.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Feedback excluído com sucesso.
        '404':
          description: Feedback não encontrado.

  /progress:
    get:
      summary: Obtém todos os progressos.
      responses:
        '200':
          description: Retorna uma lista de progressos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Progress'
    post:
      summary: Cria um novo progresso.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Progress'
      responses:
        '201':
          description: Progresso criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
    put:
      summary: Atualiza um progresso existente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Progress'
      responses:
        '200':
          description: Progresso atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
    delete:
      summary: Exclui um progresso.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Progresso excluído com sucesso.
        '404':
          description: Progresso não encontrado.

  /configurations:
    get:
      summary: Obtém todas as configurações de um usuário.
      responses:
        '200':
          description: Retorna uma lista de configurações.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration'
    post:
      summary: Cria uma nova configuração.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '201':
          description: Configuração criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
    put:
      summary: Atualiza uma configuração existente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: Configuração atualizada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
    delete:
      summary: Exclui uma configuração.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Configuração excluída com sucesso.
        '404':
          description: Configuração não encontrada.

  /levels:
    get:
      summary: Obtém todos os níveis.
      responses:
        '200':
          description: Retorna uma lista de níveis.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Level'
    post:
      summary: Cria um novo nível.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
      responses:
        '201':
          description: Nível criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Level'
    put:
      summary: Atualiza um nível existente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
      responses:
        '200':
          description: Nível atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Level'
    delete:
      summary: Exclui um nível.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Nível excluído com sucesso.
        '404':
          description: Nível não encontrado.

  /achievements:
    get:
      summary: Obtém todas as conquistas.
      responses:
        '200':
          description: Retorna uma lista de conquistas.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Achievement'
    post:
      summary: Cria uma nova conquista.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Achievement'
      responses:
        '201':
          description: Conquista criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Achievement'
    put:
      summary: Atualiza uma conquista existente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Achievement'
      responses:
        '200':
          description: Conquista atualizada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Achievement'
    delete:
      summary: Exclui uma conquista.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Conquista excluída com sucesso.
        '404':
          description: Conquista não encontrada.

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Marc"
        email:
          type: string
          example: "marc@email.com"
        password:
          type: string
          example: "523412"
    Feedback:
      type: object
      properties:
        id:
          type: integer
          example: 2
        usuario_id:
          type: integer
          example: 1
        nivel_id:
          type: integer
          example: 1
        pontos_fortes:
          type: string
          example: "Mapa muito interessante"
        pontos_melhorar:
          type: string
          example: "Não identifiquei direito o objeto"
    Progress:
      type: object
      properties:
        id:
          type: integer
          example: 3
        usuario_id:
          type: integer
          example: 1
        nivel_id:
          type: integer
          example: 1
        completado:
          type: boolean
          example: false
        pontuacao:
          type: integer
          example: 0
        tentativas:
          type: integer
          example: 1
    Configuration:
      type: object
      properties:
        id:
          type: integer
          example: 1
        usuario_id:
          type: integer
          example: 1
        idioma:
          type: string
          example: "Português"
        nivel_acessibilidade:
          type: string
          example: "Alto Contraste"
    Level:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Nível 1"
        descricao:
          type: string
          example: "Introdução ao Jogo"
        dificuldade:
          type: string
          example: "Fácil"
    Achievement:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Conquista Inicial"
        descricao:
          type: string
          example: "Complete o primeiro nível"
        requisitos:
          type: string
          example: "Completar o nível 1"